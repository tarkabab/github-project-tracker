# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page:
GET     /                           controllers.Application.index()

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)

##################################### 
#									#
# API for client applications		#
#									#
#####################################

# Users:
POST 	/api/users 													controllers.api.Users.register()
GET 	/api/users/:userName/profile 								controllers.api.Users.getProfile(userName: String)
PUT 	/api/users/:userName/profile 								controllers.api.Users.updateProfile(userName: String)

# Teams:
GET		/api/teams/:teamId 											controllers.api.Teams.getTeam(teamId: Long)
GET		/api/teams/:teamId/members									controllers.api.Teams.getMembers(teamId: Long)
DELETE	/api/teams/:teamId/members/:memberId 						controllers.api.Teams.removeMember(teamId: Long, memberId: String)
POST	/api/teams/:teamId/members 									controllers.api.Teams.addMember(teamId: Long, memberId: String)
POST 	/api/teams 													controllers.api.Teams.createTeam()

# Projects:
GET		/api/projects/:projectId/backlogitems						controllers.api.Projects.getBacklogItems(projectId: Long)
GET		/api/projects/:projectId 									controllers.api.Projects.getProject(projectId: Long)
PUT		/api/projects/:projectId/description 						controllers.api.Projects.updateDescription(projectId: Long)
POST 	/api/projects 												controllers.api.Projects.createProject()

# Backlog items:
GET		/api/backlogitems/:backlogItemId 							controllers.api.BacklogItems.getBacklogItem(backlogItemId: Long)
PUT		/api/backlogitems/:backlogItemId/priority 					controllers.api.BacklogItems.prioritize(backlogItemId: Long)
PUT 	/api/backlogitems/:backlogItemId/summary 					controllers.api.BacklogItems.changeSummary(backlogItemId: Long)
POST 	/api/backlogitems											controllers.api.BacklogItems.createBacklogItem()

# Tasks
GET		/api/backlogitems/:backlogItemId/tasks/:taskId 				controllers.api.Tasks.getTask(backlogItemId: Long, taskId: Long)
GET		/api/backlogitems/:backlogItemId/tasks						controllers.api.Tasks.getTasks(backlogItemId: Long)
POST 	/api/backlogitems/:backlogItemId/tasks 						controllers.api.Tasks.createTask(backlogItemId: Long)
